Daftar Pemahaman
cara yang ringkas untuk membuat daftar. Aplikasi umum adalah membuat daftar baru di mana setiap elemen adalah hasil dari beberapa operasi yang diterapkan ke setiap anggota urutan lain atau dapat dilakukan, atau untuk menciptakan kelanjutan dari elemen-elemen yang memenuhi suatu kondisi tertentu.

contoh, asumsikan kita ingin membuat daftar nilai, seperti:

>>> hitung = []
>>> for x in range(10):
...             hitung.append(x**2)
...
>>> hitung
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
untuk mendapatkan data atau nilai yang sama seperti di atas, bisa menggunakan cara seperi di bawah ini untuk mempermudah di mengerti atau ringkas :

>>> hitung = list(map(lambda x: x**2, range(10)))
>>> hitung
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
atau dengan cara lain :

>>> hitung = [x**2 for x in range(10)]
>>> hitung
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
contoh lainnya :

menggambungkan data atau elemen dari dua daftar yang tidak sama

>>> [(x, y) for x in [1,2,3] for y in [3,1,4] if x != y]
hasilnya :

[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]
dan sama dengan hasilnya jika menggunakan perintah seperti ini

>>> gabung = []
>>> for x in [1,2,3]:
...     for y in [3,1,4]:
...             if x !=y:
...                     gabung.append((x, y))
...
hasilnya :

>>> gabung
[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]
4. Pengertian Daftar Bersarang
contoh : di bawah ini merupakan contoh dari matriks 3x4 yang artinya datanya terdapat 3 daftar dan panjang data dari satu daftar adalah 4.

>> matrix = [
...     [1, 2, 3, 4],
...     [5, 6, 7, 8],
...     [9, 10, 11, 12],
... ]
kemudian hasil nya seperti di bawah ini jika mentransformasikan baris dan kolom datanya, hasilnya bisa dilihat di bawah ini :

>>> [[row[i] for row in matrix] for i in range(4)]
[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]
hasil akan sama saja seperti dibawah ini.

>>> transposed = []
>>> for i in range(4):
...     transposed.append([row[i] for row in matrix])
...
>>> transposed
[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]
